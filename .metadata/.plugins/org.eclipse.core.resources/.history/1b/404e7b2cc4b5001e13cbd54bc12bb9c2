package com.sunbase.customer.web;

import java.io.IOException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.sunbase.customer.dao.CustomerDao;
import com.sunbase.customer.model.Customer;
import com.sunbase.customer.model.JwtUtils;

/**
 * Servlet implementation class CustomerServlet
 */
@WebServlet("/")
public class CustomerServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
      private CustomerDao customerdao; 
 
	
	
	
	
	/**
     * @see HttpServlet#HttpServlet()
     */
    public CustomerServlet() {

    this.customerdao=new CustomerDao();
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
String action=request.getServletPath();
switch(action) {
case "/new":
	showNewForm(request, response);
	break;
case "/insert":
	inserCustomer(request, response);
	break;
case "/delete":
	deleteCustomer(request, response);
	break;
case "/edit":
	showEditForm(request, response);
	break;
case "/update":
	updateCustomer(request, response);
	break;
case "/veiw":
	veiwCustomer(request, response);
	break;
	
case "/list":
	listCustomer(request, response);
	break;
case "/login":
	loginCustomer(request, response);
	break;
default:
showloginForm(request, response);
}
	}

	private void loginCustomer(HttpServletRequest request, HttpServletResponse response) throws IOException {
	    // Retrieve username and password from the request
        String username = request.getParameter("username");
        String password = request.getParameter("password");

        // Validate the username and password (replace this with your authentication logic)
        if ("john_doe".equals(username) && "password123".equals(password)) {
            // Authentication successful

            // Generate JWT token
            String jwtToken = JwtUtils.generateToken(username);

            // Add the token to the response or use it as needed
            response.setHeader("Authorization", "Bearer " + jwtToken);

            // Redirect to the dashboard
            response.sendRedirect("list-customer.jsp");
        } else {
            // Authentication failed
            response.sendRedirect("login.jsp?error=true");
        }
    }
		
	

	private void showloginForm(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		RequestDispatcher dispatcher=request.getRequestDispatcher("login.jsp");
		dispatcher.forward(request, response);
		
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request, response);
	}
	
	private void showNewForm(HttpServletRequest request,HttpServletResponse response) throws ServletException, IOException
	{
		RequestDispatcher dispatcher=request.getRequestDispatcher("customer-form.jsp");
		dispatcher.forward(request, response);
	}
	private void showEditForm(HttpServletRequest request,HttpServletResponse response) throws ServletException, IOException
	{
		int id=Integer.parseInt(request.getParameter("id"));
		Customer existCustomer=customerdao.getCustomerById(id);
		RequestDispatcher dispatcher=request.getRequestDispatcher("customer-form.jsp");
		request.setAttribute("customer", existCustomer);
		dispatcher.forward(request, response);
	}
	private void deleteCustomer(HttpServletRequest request,HttpServletResponse response) throws ServletException, IOException
	{
		int id=Integer.parseInt(request.getParameter("id"));
		customerdao.deleteCustomer(id);
		response.sendRedirect("list");
	}
	private void inserCustomer(HttpServletRequest request,HttpServletResponse response) throws IOException {
		 String firstName=request.getParameter("firstName");
	     String lastName=request.getParameter("lastName");
	     String street=request.getParameter("street");
	     String address=request.getParameter("address");
	     String state=request.getParameter("state");
	     String city=request.getParameter("city");
	     String email=request.getParameter("email");
	     String phone=request.getParameter("phone");
	     Customer customer=new Customer(firstName, lastName, street, address, state, city, email, phone);
	     customerdao.insertCustomer(customer);
	     response.sendRedirect("list");

	}
	
	private void updateCustomer(HttpServletRequest request,HttpServletResponse response) throws IOException {
		int id=Integer.parseInt(request.getParameter("id"));
         String firstName=request.getParameter("firstName");
	     String lastName=request.getParameter("lastName");
	     String street=request.getParameter("street");
	     String address=request.getParameter("address");
	     String state=request.getParameter("state");
	     String city=request.getParameter("city");
	     String email=request.getParameter("email");
	     String phone=request.getParameter("phone");
	     Customer customer=new Customer(firstName, lastName, street, address, state, city, email, phone);
	     customerdao.updateCustomer(customer);
	     response.sendRedirect("list");

	}
	private void listCustomer(HttpServletRequest request,HttpServletResponse response) throws IOException, ServletException {
	List<Customer> listCustomer=customerdao.getAllCustomers();
	request.setAttribute("listcustomer", listCustomer);
	RequestDispatcher dispatcher=request.getRequestDispatcher("list-customer.jsp");
	dispatcher.forward(request, response);

	}
	private void veiwCustomer(HttpServletRequest request,HttpServletResponse response) throws IOException, ServletException {
	int id=Integer.parseInt(request.getParameter("id"));
	Customer customer=customerdao.getCustomerById(id);
	request.setAttribute("customer", customer);
	RequestDispatcher dispatcher=request.getRequestDispatcher("customer_by_id.jsp");
	dispatcher.forward(request, response);

	}
}
